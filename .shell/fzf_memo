RET_MEMO_SEARCH_BACK=16
fzf_memo_list(){
  local search_back
  local t
  local out
  while : ;do
    t=$1
    out=$(memo list --$t | fzf --expect=ctrl-a --preview "
    set -x
    memo search --$t {}
    ") 
    local key=$(head -1 <<<"$out")
    local search="$(head -2 <<<"$out" | tail -1)"
    
    if [[ "$key" != "" ]]; then
      memo add
      return 
    fi
    if [[ "$search" != "" ]];then
      fzf_memo_search "$t" "$search"
      [[ "$?" != "$RET_MEMO_SEARCH_BACK" ]] && return
    else
      return
    fi
  done
}

fzf_memo_search(){
  local t w
  if [[ $# == 0 ]];then
    t="title"
    w=""
  else
    t=$1
    w="$2"
  fi
  out=$(memo search --$t "$w" |fzf --ansi --expect=Esc,ctrl-a,ctrl-y --preview '
    filename=$(echo {} | sed -e "s/.* \(.*\)\$/\1/")
    MEMO_DIR=${MEMO_DIR:-~/.memo}
    bat "${MEMO_DIR}/${filename}"
    ')
  ret=$?

  local key=$(head -1 <<<"$out")
  local file="$(head -2 <<<"$out" | tail -1 | sed -e "s/.* \(.*\)\$/\1/")"
  if [[ "$key" == "Esc" ]];then
    return $RET_MEMO_SEARCH_BACK
  elif [[ "$key" == "ctrl-a" ]];then
    memo add
    return 0
  fi

  if [[ "$ret" != 0 ]];then
    return $ret
  fi

  
  if [[ "$key" == "ctrl-y" ]];then
    memo show $file | sed -n "5,\$p" | xsel -i -p && xsel -o -p | xsel -i -b
  else
    memo edit "$file"
  fi
  return 0
}