init_environment() {
  INIT_DONE_PATH=~/.init_done
  FORCE_FLG=
  if [[ $1 == "force" ]]; then
    FORCE_FLG="true"
  fi

  if [[ -e $INIT_DONE_PATH && $FORCE_FLG != "true" ]]; then
    return
  fi

  echo "update xdg user directory"
  LC_ALL=C xdg-user-dirs-update

  echo "create directory"

  DIR_GOOGLE_DRIVE=googleDrive
  DIR_DROPBOX=Dropbox
  DIR_WALLPAPER=Pictures/wallpapers
  DIR_SCREENSHOT=Pictures/screenshot
  DIR_LOCALLOG=.local/log
  DIR_CHEATSHEET=.cheatsheet

  if [[ ! -e ~/${DIR_LOCALLOG} ]]; then
    mkdir -p ~/${DIR_LOCALLOG}
  fi
  if [[ ! -e ~/${DIR_GOOGLE_DRIVE} ]]; then
    mkdir -p ~/${DIR_GOOGLE_DRIVE}
  fi

  if [[ ! -e ~/${DIR_DROPBOX} ]]; then
    mkdir -p ~/${DIR_DROPBOX}
  fi

  if [[ ! -e ~/${DIR_WALLPAPER} ]]; then
    mkdir -p ~/${DIR_WALLPAPER}
  fi

  if [[ ! -e ~/${DIR_SCREENSHOT} ]]; then
    mkdir -p ~/${DIR_SCREENSHOT}
  fi

  if [[ ! -e ~/${DIR_CHEATSHEET} ]]; then
    mkdir -p ~/${DIR_CHEATSHEET}
  fi

  echo "enable user service"

  if ! systemctl --user is-active grive-changes@$(systemd-escape "$DIR_GOOGLE_DRIVE").service >/dev/null; then
    systemctl --user enable grive-changes@$(systemd-escape "$DIR_GOOGLE_DRIVE").service
  fi

  if ! systemctl --user is-active grive-timer@$(systemd-escape "$DIR_GOOGLE_DRIVE").timer >/dev/null; then
    systemctl --user enable grive-timer@$(systemd-escape "$DIR_GOOGLE_DRIVE").timer
  fi

  echo "init node"
  if [[ $(nvm ls --no-colors | grep -Ec "^rc\\s*->\\s*v") == 0 ]]; then
    nvm install rc
    nvm use rc
  fi

  echo "install npm global modules"
  if ! npm ls -g commitizen >/dev/null; then
    npm i -g commitizen
  fi
  if ! npm ls -g cz-emoji@1.1.2 >/dev/null; then
    npm i -g cz-emoji@1.1.2
  fi

  echo "install tpm plugin"
  if [[ ! -d ~/.tmux/plugins/tpm ]]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins
  fi

  echo "install pynvim for nvim"
  if [[ $(pip list --user | grep -c pynvim) == 0 ]]; then
    pip install --user pynvim
  fi

  touch $INIT_DONE_PATH
}
